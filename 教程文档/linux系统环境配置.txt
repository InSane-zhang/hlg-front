mkdir -p /data/soft
cd /data/soft
echo "
mhash-0.9.9.9.tar.bz2
mcrypt-2.6.8.tar.gz
openssl-1.0.0d.tar.gz
curl-7.21.7.tar.gz
libevent-2.0.13-stable.tar.gz
freetype-2.4.6.tar.gz
jpegsrc.v8c.tar.gz
libpng-1.5.4.tar.gz 
ImageMagick-6.7.1-4.tar.gz
libmcrypt-2.5.8.tar.gz
php-5.3.6.tar.gz
imagick-3.0.1.tgz
FastDFS_v3.01.tar.gz
"
#yum install make gcc patch ncurses-devel gcc-c++ zlib-devel libxml2-devel 

echo "mhash:"
wget http://sourceforge.net/projects/mhash/files/latest/download
tar -xvf mhash-0.9.9.9.tar.bz2
cd mhash-0.9.9.9
./configure --prefix=/usr
make && make install
/sbin/ldconfig
cd ../

#echo "libmcrypt-2.5.8 "
wget http://sourceforge.net/projects/mcrypt/files/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz/download
tar  -zxvf libmcrypt-2.5.8.tar.gz 
cd libmcrypt-2.5.8
./configure --prefix=/usr/local
make && make install
cd ../

echo "mcrypt"
wget http://sourceforge.net/projects/mcrypt/files/latest/download?source=files
tar -zxvf  mcrypt-2.6.8.tar.gz
cd mcrypt-2.6.8
./configure --prefix=/usr/local --with-libmcrypt=/usr/local/libmcrypt -prefix=/usr
make && make install
cd ../

#echo "openssl:"  #不用安装了
#wget http://www.openssl.org/source/openssl-1.0.1e.tar.gz
#tar -zxvf openssl-1.0.1e.tar.gz
#cd openssl-1.0.1e
#./config -fPIC  --prefix=/usr/local/openssl enable-shared
#make && make install
#cd ../

echo "curl"
wget http://curl.haxx.se/download/curl-7.30.0.tar.gz
tar -zxvf curl-7.30.0.tar.gz
cd curl-7.30.0 &&./configure --prefix=/usr/local/curl --with-ssl=/usr/local/openssl &&make && make install 
cd ../

echo "libevent"
wget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz --no-check-certificate
tar -zxvf libevent-2.0.21-stable.tar.gz &&cd libevent-2.0.21-stable &&./configure --prefix=/usr/local/libevent &&make && make install
cd ../

echo "freetype2"
wget http://download.savannah.gnu.org/releases/freetype/freetype-2.4.11.tar.gz
tar -zxvf freetype-2.4.11.tar.gz &&cd freetype-2.4.11&&./configure --prefix=/usr/local/freetype &&make && make install
cd ../

echo "jpeg"
wget http://www.ijg.org/files/jpegsrc.v9.tar.gz
tar -zxvf jpegsrc.v9.tar.gz  &&cd jpeg-9/&&./configure --prefix=/usr/local/image/jpeg&&make && make install
cp /usr/local/image/jpeg/lib/libjpeg* /usr/lib/ -f
cd ../

echo "png"
wget http://sourceforge.net/projects/libpng/files/libpng16/1.6.1/libpng-1.6.1.tar.gz/download
tar -zxvf libpng-1.6.1.tar.gz 
cd libpng-1.6.1
./configure --prefix=/usr/local/image/png
make && make install
cp /usr/local/image/png/lib/libpng* /usr/lib/ -f
cd ../

echo "imagemagick"
yum remove -y ImageMagick
wget  http://ftp.fifi.org/ImageMagick/ImageMagick-6.8.4-10.tar.gz
tar -zxvf ImageMagick-6.8.4-10.tar.gz
cd ImageMagick-6.8.4-10
./configure CPPFLAGS="-I/usr/local/image/jpeg -I/usr/local/image/jpeg/include -I/usr/local/image/png -I/usr/local/image/png/include" LDFLAGS="-L/usr/local/lib -L/usr/local/image/jpeg/lib -L/usr/local/image/png/lib" 
make && make install
cd ../


echo "mysql"
mkdir -p /usr/local/mysql/ &&mkdir -p /service/mysql/&&groupadd mysql&&useradd -g mysql mysql&&chown mysql.mysql -R /service/mysql/
wget http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz
tar zxvf cmake-2.8.10.2.tar.gz
cd cmake-2.8.10.2 &&./configure --prefix=/usr/local/cmake&&make && make install &&cd ..
ln -s /usr/local/cmake/bin/cmake /usr/bin/cmake
wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.11.tar.gz/from/http://cdn.mysql.com/
tar zxvf mysql-5.6.11.tar.gz&&cd mysql-5.6.11
cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/service/data/ -DMYSQL_UNIX_ADDR=/service/data/mysqld.sock -DWITH_INNOBASE_STORAGE_ENGINE=1 -DSYSCONFDIR=/etc -DEXTRA_CHARSETS=all -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_unicode_ci  -DWITH_DEBUG=0
 mkdir -p /data/mysql
 make && make install && cp /usr/local/mysql/support-files/my-default.cnf  /etc/my.cnf&&cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld&&chmod 755 /etc/init.d/mysqld 
 #bash scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql
#/etc/init.d/mysqld start
#/etc/init.d/mysqld stop
 ln -s /usr/local/mysql/bin/mysql /usr/bin/mysql
cd ..

cd /data/soft
echo "php"
mkdir -p /etc/php
wget http://cn2.php.net/get/php-5.4.14.tar.gz/from/this/mirror
tar -zxvf php-5.4.14.tar.gz &&cd php-5.4.14 &&./configure --prefix=/usr/local/php --with-zlib --enable-zip --with-iconv  --with-mysql=/usr/local/mysql/ --enable-sockets --enable-mbstring --with-mhash --with-mcrypt --with-curl=/usr/local/curl/ --with-pdo-mysql=/usr/local/mysql --with-config-file-path=/etc/php/ --enable-fpm --with-gd --with-jpeg-dir=/usr/local/image/jpeg/ --with-png-dir=/usr/local/image/png/ --with-openssl-dir=/usr/local/openssl --with-openssl&&make && make install
ln -s /usr/local/php/bin/php /usr/bin/php


cp php.ini-production /etc/php/php.ini &&cd /usr/local/php/etc && cp php-fpm.conf.default php-fpm.conf
/usr/local/php/sbin/php-fpm
cd /data/soft/

echo "imagick"
wget http://pecl.php.net/get/imagick-3.1.0RC2.tgz
tar xzvf imagick-3.1.0RC2.tgz
cd imagick-3.1.0RC2
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/
yum install autoconf -y
ln -s /usr/local/include/ImageMagick-6 /usr/local/include/ImageMagick
/usr/local/php/bin/phpize &&./configure --with-php-config=/usr/local/php/bin/php-config &&make && make install

#cd /root/soft
#echo "FastDFS_v3.01.tar.gz"
#tar -zxvf FastDFS_v3.01.tar.gz &&cd FastDFS&&./make.sh&&./make.sh install
#mkdir /usr/local/fastdfs/tracker/bin -p&&mkdir /usr/local/fastdfs/storage/bin -p&&cp /usr/local/bin/fdfs_trackerd /usr/local/fastdfs/tracker/bin
#(运行基目录，只要配置文件目录一致就可实现升级)
#cp /usr/local/bin/fdfs_storaged /usr/local/fastdfs/storage/bin
#(运行基目录，只要配置文件目录一致就可实现升级)

#echo "fastDFS PHP extension"
#cd php_client/
#/usr/local/php/bin/phpize &&./configure --with-php-config=/usr/local/php/bin/php-config &&make && make install
#client配置
#vi /etc/fdfs/client.conf 
#vi /etc/php/php.ini



#memcache
cd ../
wget http://memcached.googlecode.com/files/memcached-1.4.15.tar.gz
tar -zxvf memcached-1.4.15.tar.gz 
cd memcached-1.4.15 &&./configure --prefix=/usr/local/memcached --with-libevent=/usr/local/libevent&& make && make install
cd ../

 wget http://pecl.php.net/get/memcache-3.0.8.tgz
 tar -zxvf memcache-3.0.8.tgz 

 cd memcache-3.0.8
 /usr/local/php/bin/phpize
 ./configure --enable-memcache=/usr/local/memcached --with-php-config=/usr/local/php/bin/php-config --with-apxs2=/usr/sbin/apxs2
make && make install


#先安装pcre(rewrite用到，源码安装)
cd ../
wget http://downloads.sourceforge.net/project/pcre/pcre/8.32/pcre-8.32.tar.gz
tar -zxvf pcre-8.32.tar.gz
cd pcre-8.32
 ./configure && make && make install
 cd ..

groupadd nginx &&useradd -g nginx nginx
编辑/etc/passwd
#安装nginx

wget http://nginx.org/download/nginx-1.2.8.tar.gz
tar -zxvf nginx-1.2.8.tar.gz 
ln -s /lib64/libpcre.so.0.0.1 /lib64/libpcre.so.1
cd nginx-1.2.8
./configure --prefix=/usr/local/nginx --conf-path=/etc/nginx/nginx.conf  --user=nginx --group=nginx --without-http-cache --with-http_stub_status_module
make && make install

# cd ..
# tar -zxvf boost_1_47_0.tar.gz && cd boost_1_47_0 && ./bootstrap.sh&& ./bjam "-sTOOLS=gcc" --includedir=/usr/include --libdir=/usr/lib 
# cp /usr/lib/libboost* /usr/lib64/ 
# install && ldconfig
# http://downloads.sourceforge.net/project/boost/boost/1.47.0/boost_1_47_0.tar.gz
# http://downloads.sourceforge.net/project/boost/boost/1.46.0/boost_1_46_0.tar.gz

 
# yum install e2fsprogs-devel
 
# cd ../
# tar xzf gearmand-0.18.tar.gz
#cd gearmand-0.18
# ./configure && make && make install&& cd ../
 
# tar xzf gearman-0.7.0.tgz &&cd gearman-0.7.0&&/usr/local/php/bin/phpize&&./configure --with-php-config=/usr/local/php/bin/php-config&&make
#make install

# mkdir -p /usr/local/fastdfs/client && mkdir -p /usr/local/fastdfs/client/logs
 
 
 #git
 cd ..
 wget https://git-core.googlecode.com/files/git-1.8.2.1.tar.gz
 tar -zxvf git-1.8.2.1.tar.gz
 cd git-1.8.2.1
 ./configure --prefix=/usr/local/git
 make && make install
ln -s /usr/local/git/bin/git /usr/bin/git
cd ..
#make


文件限制 ulimit -SHn 86400

#git --version


  php5.4：
  直接啊月  10:51:28
/usr/local/php/bin/pecl install amqp
即可完成安装
  
extension = amqp.so
amqp.host="10.242.148.162"
amqp.port="5672"
amqp.vhost="/vhost_happyhx_test"
amqp.login="happyhx_test"
amqp.password="6ea93ed59154f7c4ff9cce09d5057df4"
cd ..

echo "iftop"
yum install -y flex byacc libpcap libpcap-devel ncurses ncurses-devel gcc
wget http://www.ex-parrot.com/pdw/iftop/download/iftop-0.17.tar.gz
tar -zxvf iftop-0.17.tar.gz
cd iftop-0.17
./configure --prefix=/usr/local/
make&make install

cd ..
netstat -apn
#eaccelerator 扩展
wget  https://github.com/eaccelerator/eaccelerator/tarball/master --no-check-certificate
mv master eaccelerator.tar.gz
tar -xvf eaccelerator.tar.gz
 mv eaccelerator-eaccelerator-42067ac eaccelerator
cd eaccelerator
/usr/local/php/bin/phpize 
./configure --enable-eaccelerator=shard --with-php-config=/usr/local/php/bin/php-config 
make && make install

vi /etc/php/php.ini
extension="eaccelerator.so"
eaccelerator.shm_size="100"
eaccelerator.cache_dir="/data/eaccelerator"
eaccelerator.enable="1"
eaccelerator.optimizer="1"
eaccelerator.check_mtime="1"
eaccelerator.debug="0"
eaccelerator.filter=""
eaccelerator.shm_max="0"
eaccelerator.shm_ttl="43200"
eaccelerator.shm_prune_period="2592000"
eaccelerator.shm_only="0"
eaccelerator.compress="1"
eaccelerator.compress_level="9"

mkdir -p /data/eaccelerator
chmod 0777 /data/eaccelerator

vi /usr/local/php/etc/php-fpm.conf

request_terminate_timeout = 60
request_slowlog_timeout = 10s
slowlog = var/log/slow.log

cd /usr/local/php/var/log/
touch  slow.log
chmod 0777 /usr/local/php/var/log/slow.log

echo "agent"
wget http://storage.aliyun.com/jiankong-agent/jiankongagent-1-6.x86_64.rpm
 rpm -ivh jiankongagent-1-6.x86_64.rpm
 cmsd start
echo "cmsd start">>/etc/rc.d/rc.local 


调整内核参数，让tcp快速回收
另外TIMEWAIT需要自己设置一个内核参数
阿里云-小玉 (11:10:02): 
这个没办法，PHP一次请求完，会自动关闭资源的链接，包括数据库，文件这些的句柄。

vim /etc/sysctl.conf

net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_fin_timeout = 30


然后：sysctl -p 生效一下


创建一个git账号，

然后ssh-keygen -t rsa

一路回车，将home/用户/.ssh/id….pub文件上传到git server



分词扩展：
cd /data/soft
wget http://www.xunsearch.com/scws/down/scws-1.2.1.tar.bz2
 tar xvjf scws-1.2.1.tar.bz2
cd scws-1.2.1
./configure --prefix=/usr/local/scws ; make ; make install

cd phpext/
/usr/local/php/bin/phpize
 ./configure --with-scws=/usr/local/scws --with-php-config=/usr/local/php/bin/php-config
 make && make install
 
 在 php.ini 中加入以下几行

[scws]
;
; 注意请检查 php.ini 中的 extension_dir 的设定值是否正确, 否则请将 extension_dir 设为空，
; 再把 extension = scws.so 指定绝对路径。
;

extension = scws.so
scws.default.charset = utf8
scws.default.fpath = /service/promo/lib/Scws/etc/


php.ini 修改
; After this number of seconds, stored data will be seen as 'garbage' and
; cleaned up by the garbage collection process.
; http://php.net/session.gc-maxlifetime
session.gc_maxlifetime = 2440 为21600


 
内网地址
ifconfig eth0 | grep 'inet ' | cut -d ':' -f 2 |cut -d ' ' -f 1
替换内网地址sed -i "s/10.241.59.7/`ifconfig eth0 | grep 'inet ' | cut -d ':' -f 2 |cut -d ' ' -f 1`/g" nginx.conf
sed -i "s/10.200.6.229/`cat /root/ip.local`/g" nginx.conf
 rsync -ave ssh tiger@110.76.40.234:/storage02/data/ /data/storage02
 修改ssh同时连接数
 sed -i "s/#MaxStartups 10/MaxStartups 1000/g" /etc/ssh/sshd_config
 
 scp .ssh/id_rsa.pub lzjie@hlg28:~/`hostname`.pub
 chmod 700 ~/.ssh
 cd ~/.ssh
 cp ../*.pub  .
 cat hlg*.pub>>authorized_keys
 chmod 600 ~/.ssh/authorized_keys
 
echo $LANG
修改字体
vi /etc/sysconfig/i18n

vim /etc/profile
export LC_ALL="C" 
#export LANG="zh_CN.UTF-8" 
source /etc/sysconfig/i18n


echo "set encoding=utf8" >> /etc/vimrc


剩下的工作：
git 账号实现免登
修改hosts文件，配置内网地址与主机简称的对应关系
将必须的一些文件写入到/etc/rc.local实现开机自启动

创建task/app/cron/bash/restart/`hostnamee`.sh
将本机要运行的任务脚本写入，
  